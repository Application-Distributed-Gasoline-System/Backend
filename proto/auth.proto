syntax = "proto3";

package auth;

// --- Mensajes básicos ---
message Empty {}

// --- Registro y Login ---
message RegisterRequest {
  string email = 1;
  string password = 2;
  string name = 3;
  string role = 4;
}

message RegisterResponse {
  bool success = 1;
  string message = 2;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  bool success = 1;
  string message = 2;
  string accessToken = 3;
  string refreshToken = 4;
  int64 expiresIn = 5;
}

// --- Tokens ---
message RefreshRequest {
  string refreshToken = 1;
}

message RefreshResponse {
  string accessToken = 1;
  string refreshToken = 2;
  int64 expiresIn = 3;
}

message ValidateRequest {
  string token = 1;
}

message ValidateResponse {
  bool valid = 1;
  string userId = 2;
  string email = 3;
  string role = 4;
}

message RevokeRequest {
  string refreshToken = 1;
}

message RevokeResponse {
  bool revoked = 1;
}

// --- Reset de Contraseña ---
message RequestPasswordResetRequest {
  string email = 1;
}

message RequestPasswordResetResponse {
  bool success = 1;
  string message = 2;
  string resetToken = 3; // opcional: útil para pruebas locales
}

message ResetPasswordRequest {
  string token = 1;
  string newPassword = 2;
}

message ResetPasswordResponse {
  bool success = 1;
  string message = 2;
}

message SetUserActiveStatusRequest {
  string userId = 1;
  bool active = 2; // true = activar, false = desactivar
}

message SetUserActiveStatusResponse {
  bool success = 1;
  string userId = 2;
  bool active = 3;
}
message GetAllUsersRequest {} 
message UserInfo {
  string id = 1;
  string email = 2;
  string name = 3;
  string role = 4;
  bool active = 5;
}
message GetAllUsersResponse {
  repeated UserInfo users = 1;
}
message UpdateUserRequest {
  string userId = 1;
  string email = 2;    // opcional
  string name = 3;     // opcional
  string role = 4;     // opcional
  bool active = 5;     // opcional
}

message UpdateUserResponse {
  bool success = 1;
  string message = 2;
  UserInfo user = 3;
}

// --- Servicio ---
service AuthService {
  rpc Register (RegisterRequest) returns (RegisterResponse);
  rpc Login (LoginRequest) returns (LoginResponse);
  rpc RefreshToken (RefreshRequest) returns (RefreshResponse);
  rpc ValidateToken (ValidateRequest) returns (ValidateResponse);
  rpc RevokeToken (RevokeRequest) returns (RevokeResponse);
  rpc RequestPasswordReset (RequestPasswordResetRequest) returns (RequestPasswordResetResponse);
  rpc ResetPassword (ResetPasswordRequest) returns (ResetPasswordResponse);
  rpc SetUserActiveStatus (SetUserActiveStatusRequest) returns (SetUserActiveStatusResponse);
  rpc GetAllUsers (GetAllUsersRequest) returns (GetAllUsersResponse);
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse);
}
