syntax = "proto3";

package routes;

service RouteService {
  rpc GetAllRoutes (GetAllRoutesRequest) returns (GetAllRoutesResponse);
  rpc GetRouteById (RouteByIdRequest) returns (RouteResponse);
  rpc CreateRoute (CreateRouteRequest) returns (RouteResponse);
  rpc UpdateRoute (UpdateRouteRequest) returns (RouteResponse);
  rpc DeleteRoute (RouteByIdRequest) returns (RouteResponse);
}

// ======== Requests ========

message GetAllRoutesRequest {
  int32 page = 1;
  int32 limit = 2;
}

message RouteByIdRequest {
  int32 id = 1;
}

message CreateRouteRequest {
  string code = 1;
  string origin = 2;
  string destination = 3;
  float distanceKm = 4;
  string machineryType = 5;     // Enum: LIGHT, HEAVY
  float estimatedFuelL = 6;
  float actualFuelL = 7;
  string status = 8;            // Enum: PLANNED, IN_PROGRESS, COMPLETED, CANCELLED
  string scheduledAt = 9;       // ISO 8601 date string
  string startedAt = 10;        // ISO 8601 date string
  string completedAt = 11;      // ISO 8601 date string
  string driverId = 12;
  int32 vehicleId = 13;
}

message UpdateRouteRequest {
  int32 id = 1;
  string code = 2;
  string origin = 3;
  string destination = 4;
  float distanceKm = 5;
  string machineryType = 6;
  float estimatedFuelL = 7;
  float actualFuelL = 8;
  string status = 9;
  string scheduledAt = 10;
  string startedAt = 11;
  string completedAt = 12;
  string driverId = 13;
  int32 vehicleId = 14;
}

// ======== Responses ========

message RouteResponse {
  int32 id = 1;
  string code = 2;
  string origin = 3;
  string destination = 4;
  float distanceKm = 5;
  string machineryType = 6;
  float estimatedFuelL = 7;
  float actualFuelL = 8;
  string status = 9;
  string scheduledAt = 10;
  string startedAt = 11;
  string completedAt = 12;
  string driverId = 13;
  string driverName = 14;      // Para mostrar la copia local
  int32 vehicleId = 15;
  string vehiclePlate = 16;    // Para mostrar la copia local
  string createdAt = 17;
  string updatedAt = 18;
  string message = 19;
}

message GetAllRoutesResponse {
  repeated RouteResponse routes = 1;
  int32 total = 2;
  int32 page = 3;
  int32 totalPages = 4;
}
